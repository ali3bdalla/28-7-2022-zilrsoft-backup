<?php
//
//	namespace Tests\Feature;
//
//	use App\Account;
//	use App\Item;
//	use App\User;
//	use Illuminate\Foundation\Testing\WithFaker;
//	use Tests\TestCase;
//
//	class BillTest extends TestCase
//	{
//
//		use WithFaker;
//
//		/**
//		 * A basic feature test example.
//		 *
//		 * @test
//		 * @return void
//		 */
//		public function toCreatePurchase()
//		{
//
//
//			$total = 0;
//			$net = 0;
//			$discount_value = 0;
//			$discount_percent = 0;
//			$remaining = 15;
//			$subtotal = 0;
//			$tax = 0;
//
//
//			$method = Account::where('slug','gateway')->first();
//
//
//			$invoice_items = [];
//			$items = Item::where('is_need_serial',false)->take(10)->get();
//			foreach ($items as $item){
//				$item['qty'] = random_int(1,20);
//				$item['purchase_price'] = $item['price'] - 15;
//
//				$price = $item['purchase_price'];
//
//				$item['total'] = $item['qty'] * $price;
//				$item['discount'] = random_int(1,3);
//				$item['subtotal'] = $item['total'] - $item['discount'];
//				$item['tax'] = $item['subtotal'] * 5 / 100;
//				$item['net'] = $item['tax'] + $item['subtotal'];
//
//				$invoice_items[] = $item;
//
//				$total = $total + $item['total'];
//				$subtotal = $subtotal + $item['subtotal'];
//				$net = $net + $item['net'];
//				$tax = $tax + $item['tax'];
//				$discount_value = $discount_value + $item['discount'];
//			}
//
//
//
//
//			$method['amount'] = floatval($net) -$remaining;
//
//
//			$data = [
//				'receiver_id' => auth()->user()->id,
//				'creator_id' => auth()->user()->id,
//				'vendor_id' => User::where('is_vendor',true)->first()->id,
//				'branch_id' => auth()->user()->branch_id,
//				'department_id' => auth()->user()->department_id,
//				'vendor_inc_number' => $this->faker->numerify(),
//				'items' => $invoice_items,
//				'status' => 'paid',
//				'total' => $total,
//				'subtotal' => $subtotal,
//				'tax' => $tax,
//				'net' => $net,
//				'discount_value' => $discount_value,
//				'discount_percent' => $discount_percent,
//				'remaining' => $remaining,
//				'methods' => [collect($method)->toArray()]
//
//			];
//
//
//			$response = $this->json('post',
//				route('management.purchases.store'),$data);
//
////			$response->dump();
//
//			$response->assertStatus(200);
//		}
//
//		protected function setUp():void
//		{
//			parent::setUp(); // TODO: Change the autogenerated stub
//			auth()->loginUsingId(1);
//		}
//	}
