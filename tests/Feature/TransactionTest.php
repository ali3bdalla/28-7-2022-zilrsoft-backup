<?php

	namespace Tests\Feature;

	use App\Account;
	use Illuminate\Foundation\Testing\WithFaker;
	use Tests\TestCase;

	class TransactionTest extends TestCase
	{

		use WithFaker;

		/**
		 * A basic feature test example.
		 *
		 * @return void
		 */
		public function testExample()
		{
			$accounts = Account::take(4)->get();


			$transactions = [];
			foreach ($accounts as $index => $account){


				if ($index % 2 == 0){
					$account->is_credit = true;
				}else{
					$account->is_credit = false;
				}

				$account->credit_amount = 0;
				$account->debit_amount = 0;


				if ($account->is_credit){
					$account->credit_amount = 50;
				}else{
					$account->debit_amount = 50;
				}
				$transactions[] = $account;
			}
			$data = [
				'description' => $this->faker->sentence,
				"amount" => $this->faker->randomFloat(),
				'transactions' => $transactions
			];
			$response = $this->json('post',
				route('management.transactions.store'),$data);

			$response->dump();

			$response->assertStatus(200);
		}

		protected function setUp():void
		{
			parent::setUp(); // TODO: Change the autogenerated stub
			auth()->loginUsingId(1);
		}
	}
